"use strict";let users=[];function findOpponent(e){for(let s=0;s<users.length;s++)e!==users[s]&&users[s].opponent===null&&new Game(e,users[s]).start()}function removeUser(e){users.splice(users.indexOf(e),1)}class Game{constructor(e,s){this.user1=e;this.user2=s}start(){this.user1.start(this,this.user2);this.user2.start(this,this.user1)}ended(){return this.user1.guess!==GUESS_NO&&this.user2.guess!==GUESS_NO}score(){this.user1.guess===GUESS_ROCK&&this.user2.guess===GUESS_SCISSORS||this.user1.guess===GUESS_PAPER&&this.user2.guess===GUESS_ROCK||this.user1.guess===GUESS_SCISSORS&&this.user2.guess===GUESS_PAPER?(this.user1.win(),this.user2.lose()):this.user2.guess===GUESS_ROCK&&this.user1.guess===GUESS_SCISSORS||this.user2.guess===GUESS_PAPER&&this.user1.guess===GUESS_ROCK||this.user2.guess===GUESS_SCISSORS&&this.user1.guess===GUESS_PAPER?(this.user2.win(),this.user1.lose()):(this.user1.draw(),this.user2.draw())}}class User{constructor(e){this.socket=e;this.game=null;this.opponent=null;this.guess=GUESS_NO}setGuess(e){if(!this.opponent||e<=GUESS_NO||e>GUESS_SCISSORS){return!1}this.guess=e;return!0}start(e,s){this.game=e;this.opponent=s;this.guess=GUESS_NO;this.socket.emit("start")}end(){this.game=null;this.opponent=null;this.guess=GUESS_NO;this.socket.emit("end")}win(){this.socket.emit("win",this.opponent.guess)}lose(){this.socket.emit("lose",this.opponent.guess)}draw(){this.socket.emit("draw",this.opponent.guess)}}module.exports={io:e=>{let s=new User(e);users.push(s);findOpponent(s);e.on("disconnect",()=>{console.log("Disconnected: "+e.id),removeUser(s),s.opponent&&(s.opponent.end(),findOpponent(s.opponent))});e.on("guess",n=>{console.log("Guess: "+e.id),s.setGuess(n)&&s.game.ended()&&(s.game.score(),s.game.start(),storage.get('games',0).then(e=>{storage.set('games',e+1)}))});console.log("Connected: "+e.id)},stat:(e,s)=>{storage.get('games',0).then(e=>{s.send(`<h1>Games played: ${e}</h1>`)})}}